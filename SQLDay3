--All scenarios are based on Database NORTHWND.
--
USE Northwind
GO
--1.      List all cities that have both Employees and Customers.
select distinct City
from Customers
where city in (SELECT City from Employees)

--
--2.      List all cities that have Customers but no Employee.
--
	--a.      Use sub-query
	--
	select distinct City 
	from Customers
	where city not in (SELECT City from Employees)
	--b.      Do not use sub-query
	--
	select distinct c.City 
	from Customers c 
	left join Employees e
	on c.City = e.City
--3.      List all products and their total order quantities throughout all orders.
--
SELECT c.CustomerID, c.CompanyName, c.ContactName, 
SUM(od.Quantity) AS QTY FROM 
Customers c 
LEFT JOIN 
Orders o 
ON c.CustomerID = o.CustomerID
LEFT JOIN 
[Order Details] od
ON o.OrderID = od.OrderID
GROUP BY c.CustomerID, c.CompanyName, c.ContactName
ORDER BY QTY desc
--4.      List all Customer Cities and total products ordered by that city.
--
SELECT c.City,
SUM(od.Quantity) AS QTY FROM 
Customers c 
LEFT JOIN 
Orders o 
ON c.CustomerID = o.CustomerID
LEFT JOIN 
[Order Details] od
ON o.OrderID = od.OrderID
GROUP BY c.City
ORDER BY QTY desc
--5.      List all Customer Cities that have at least two customers.
--
--a.      Use union
--
select u.City from Customers u group by u.City having COUNT(u.City) > 2 
union 
select c.City from Customers c group by c.City having COUNT(c.City) = 2
--b.      Use sub-query and no union
--
select distinct c.City
from Customers c
where c.City in (select u.City from Customers u group by u.City having COUNT(u.City) >= 2 )
--6.      List all Customer Cities that have ordered at least two different kinds of products.
--
select distinct c.City
from Orders o inner join Customers c
on o.CustomerID = c.CustomerID
inner join [Order Details] r
on r.OrderID = o.OrderID
group by c.City, r.ProductID
having count(r.ProductID) > 2
--7.      List all Customers who have ordered products, but have the ‘ship city’ on the order different from their own customer cities.
--
select * from Customers c
where c.City not in 
(select o.ShipCity from Orders o inner join Customers c on o.ShipCity = c.City)
--8.      List 5 most popular products, their average price, and the customer city that ordered most quantity of it.
--
WITH cte_ordersc
as(
SELECT oc.ShipCity,oc.ProductID, oc.average,DENSE_RANK() over (partition by
oc.ProductID order by oc.number) rnk FROM (
SELECT TOP(5) od.ProductID,o.ShipCity, SUM(Quantity) number,AVG(od.UnitPrice)
average FROM dbo.Orders o left join dbo.[Order Details] od on o.OrderID=od.OrderID
GROUP BY o.ShipCity, od.ProductID
ORDER BY number DESC
) oc
)
select * from cte_ordersc where rnk=1
--9.      List all cities that have never ordered something but we have employees there.
--
--a.      Use sub-query
--
select e.City from Employees e
where e.City not in (
select c.City from Orders o inner join Customers c
on c.CustomerID = o.CustomerID)

--b.      Do not use sub-query
--
select distinct e.City from Employees e
left join Customers c
on e.City = c.City
where c.City is null

--10.  List one city, if exists, that is the city from where the employee sold most orders (not the product quantity) is, and also the city of most total quantity of products ordered from. (tip: join  sub-query)
--
select * from 
(select Top 1 e.City, count(o.OrderID) countOrder from Employees e inner join Orders o
on e.EmployeeID = o.EmployeeID
group by e.City) T1
inner join (
select Top 1 c.City, count(r.Quantity) countQuantity from [Order Details] r inner join
Orders d on r.OrderID = d.OrderID
inner join Customers c on c.CustomerID = d.CustomerID group by c.City) T2
on T1.City = T2.City;

--11. How do you remove the duplicates record of a table?
ROW_NUMBER() with DELETE
